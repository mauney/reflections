When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository is useful for collaborating with other people on the
    same project, for accessing project files myself from different computers
    and locations, and for having an off-site backup of files.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If a feature or bug fix has been assigned to one person, it would be best to
    complete the work before making it available to all. Otherwise, people might
    branch from an unstable commit.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork copies someone else's GitHub project to your account. Any changes
    you make exist only in your copy. Use this if you want to start with an
    existing project and take it in your own direction.

    Cloning a repository creates a local copy of the repository. The original
    and the clone can be kept in sync with push and pull commands. Use this
    when you are a collaborator on the original repository.

    Starting a branch within a repository creates common commit point with the
    original branch. You can fiddle with the code on the new branch without
    disrupting anything on the first branch. Later, the branches can be merged
    back together if the new branch proves fruitful. Use a branch when you want
    to try a new feature or make other changes that may or may not be kept.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Git can inform me when the local repository is ahead of the remote. I can
    fetch from the remote and merge locally while leaving the remote untouched.
    After a successful merge I can push from local to back up to origin.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
